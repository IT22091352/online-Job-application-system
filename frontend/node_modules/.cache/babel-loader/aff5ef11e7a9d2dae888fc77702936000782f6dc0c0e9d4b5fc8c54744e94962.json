{"ast":null,"code":"var _jsxFileName = \"D:\\\\myprojects\\\\online-application-system\\\\frontend\\\\src\\\\components\\\\EmailOtpFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { TextField, Button, Box, Typography, Alert, Stack } from '@mui/material';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailOtpFlow({\n  onVerified\n}) {\n  _s();\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n  const [serverMsg, setServerMsg] = useState('');\n  const [error, setError] = useState('');\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const handleEmail = async data => {\n    setError('');\n    setServerMsg('');\n    try {\n      await api.post('/otp/request', {\n        email: data.email\n      });\n      setEmail(data.email);\n      setStep(2);\n      setServerMsg('OTP sent to your email.');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to send OTP');\n    }\n  };\n  const handleOtp = async data => {\n    setError('');\n    setServerMsg('');\n    try {\n      await api.post('/otp/verify', {\n        email,\n        otp: data.otp\n      });\n      setServerMsg('OTP verified!');\n      onVerified(email);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'OTP verification failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: 400,\n    mx: \"auto\",\n    mt: 2,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        mb: 1,\n        align: \"center\",\n        children: \"Email Verification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleEmail),\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email Address\",\n            fullWidth: true,\n            margin: \"normal\",\n            \"aria-label\": \"Email Address\",\n            ...register('email', {\n              required: 'Email is required',\n              pattern: {\n                value: /.+@.+\\..+/,\n                message: 'Invalid email address'\n              }\n            }),\n            error: !!errors.email,\n            helperText: errors.email ? errors.email.message : '',\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Send OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(handleOtp),\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter OTP\",\n            fullWidth: true,\n            margin: \"normal\",\n            \"aria-label\": \"Enter OTP\",\n            ...register('otp', {\n              required: 'OTP is required'\n            }),\n            error: !!errors.otp,\n            helperText: errors.otp ? errors.otp.message : '',\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), serverMsg && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        icon: true,\n        children: serverMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        icon: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailOtpFlow, \"1VTtEEOc/LPNRsda38ZaII2jpRs=\", false, function () {\n  return [useForm];\n});\n_c = EmailOtpFlow;\nvar _c;\n$RefreshReg$(_c, \"EmailOtpFlow\");","map":{"version":3,"names":["React","useState","useForm","TextField","Button","Box","Typography","Alert","Stack","api","jsxDEV","_jsxDEV","EmailOtpFlow","onVerified","_s","step","setStep","email","setEmail","serverMsg","setServerMsg","error","setError","register","handleSubmit","formState","errors","handleEmail","data","post","err","_err$response","_err$response$data","response","handleOtp","otp","_err$response2","_err$response2$data","maxWidth","mx","mt","children","spacing","variant","mb","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","autoComplete","label","fullWidth","margin","required","pattern","value","message","helperText","autoFocus","type","color","severity","icon","_c","$RefreshReg$"],"sources":["D:/myprojects/online-application-system/frontend/src/components/EmailOtpFlow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { TextField, Button, Box, Typography, Alert, Stack } from '@mui/material';\r\nimport api from '../api';\r\n\r\nexport default function EmailOtpFlow({ onVerified }) {\r\n  const [step, setStep] = useState(1);\r\n  const [email, setEmail] = useState('');\r\n  const [serverMsg, setServerMsg] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const handleEmail = async (data) => {\r\n    setError('');\r\n    setServerMsg('');\r\n    try {\r\n      await api.post('/otp/request', { email: data.email });\r\n      setEmail(data.email);\r\n      setStep(2);\r\n      setServerMsg('OTP sent to your email.');\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to send OTP');\r\n    }\r\n  };\r\n\r\n  const handleOtp = async (data) => {\r\n    setError('');\r\n    setServerMsg('');\r\n    try {\r\n      await api.post('/otp/verify', { email, otp: data.otp });\r\n      setServerMsg('OTP verified!');\r\n      onVerified(email);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'OTP verification failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box maxWidth={400} mx=\"auto\" mt={2}>\r\n      <Stack spacing={3}>\r\n        <Typography variant=\"h5\" mb={1} align=\"center\">Email Verification</Typography>\r\n        {step === 1 && (\r\n          <form onSubmit={handleSubmit(handleEmail)} autoComplete=\"off\">\r\n            <Stack spacing={2}>\r\n              <TextField\r\n                label=\"Email Address\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                aria-label=\"Email Address\"\r\n                {...register('email', { required: 'Email is required', pattern: { value: /.+@.+\\..+/, message: 'Invalid email address' } })}\r\n                error={!!errors.email}\r\n                helperText={errors.email ? errors.email.message : ''}\r\n                autoFocus\r\n              />\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Send OTP</Button>\r\n            </Stack>\r\n          </form>\r\n        )}\r\n        {step === 2 && (\r\n          <form onSubmit={handleSubmit(handleOtp)} autoComplete=\"off\">\r\n            <Stack spacing={2}>\r\n              <TextField\r\n                label=\"Enter OTP\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                aria-label=\"Enter OTP\"\r\n                {...register('otp', { required: 'OTP is required' })}\r\n                error={!!errors.otp}\r\n                helperText={errors.otp ? errors.otp.message : ''}\r\n                autoFocus\r\n              />\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Verify OTP</Button>\r\n            </Stack>\r\n          </form>\r\n        )}\r\n        {serverMsg && <Alert severity=\"success\" icon={true}>{serverMsg}</Alert>}\r\n        {error && <Alert severity=\"error\" icon={true}>{error}</Alert>}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}